<div id="upload">
    <div data-reactroot="">
        <div class="app">
            <div class="full-bleed full-bleed--background" style="background-color:#f3f3f3">
                <div class="container artwork__container">
                    <span></span>
                    <div class="new-page">
                        @using (Ajax.BeginForm("Setep6", "Upload", null, new AjaxOptions()
                        {
                            HttpMethod = "POST",
                            UpdateTargetId = "updatediv",
                            LoadingElementId = "submit_spin",
                            OnBegin = "$('#submit_btn').attr('disabled', 'disabled');",
                            OnComplete = " $('#submit_btn').removeAttr('disabled', 'disabled');",
                        }, new { enctype = "multipart/form-data" }))
                        {
                            <span></span>
                            <div class="new-page__content pane pane--padded pane--centered pane--full">
                                <div class="progress-component wizard-progress">
                                    <div class="progress-component__inner" style="transform: translateX(411.111px);"></div>
                                </div>
                                <div class="dimensions">
                                    <h1 class="animate-group-0-0">Dimensions</h1>
                                    <p class="descriptor animate-group-0-1">It’s very important that you provide accurate dimensions as collectors and trade clients need to know the exact size of an artwork before purchasing it. For flat artworks, such as photographs and other works on paper, we suggest that you enter a depth of 0.1.</p>
                                    <div class="form-group form-group--inline-block dimensions-input animate-group-0-2">
                                        <div class="input-container"><label for="art_height">Height</label><input name="Height" type="number" value="0" class="h_num" id="art_height" min="0"></div>
                                        <div class="input-container"><label for="art_width">Width</label><input name="Width" type="number" value="0" class="w_num" min="0"></div>
                                        <div class="input-container"><label for="art_depth">Depth</label><input name="Depth" type="number" value="0" class="" step="0.1" min="0"></div>
                                        <div class="form-group__info">inches</div>
                                        <canvas id="myCanvas" class="dimensions-preview-canvas animate-group-0-2" height="400" width="400"></canvas>
                                    </div>
                                </div>
                                <div onclick="callbackpage()" class="wizard-button wizard-button--left"><i class="wizard-button__icon"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 215 370.8" style="enable-background:new 0 0 215 370.8;" xml:space="preserve"><g><g><polygon points="215,24.8 190.9,0 0,185.4 190.9,370.8 215,346 49.7,185.4 "></polygon></g></g></svg></i><div class="wizard-button__text"><span>Mediums, Materials, &amp; Styles</span></div></div>
                                <button type="submit" hidden id="submit"></button>
                                <div class="wizard-button wizard-button--right" onclick="$('#submit').click();">
                                    <div class="wizard-button__text"><span>Description</span></div><i class="wizard-button__icon"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 215 370.8" style="enable-background:new 0 0 215 370.8;" xml:space="preserve"><g><g><polygon points="215,24.8 190.9,0 0,185.4 190.9,370.8 215,346 49.7,185.4 "></polygon></g></g></svg></i>
                                </div>
                                <div class="mobile-status-bar">
                                    <span>
                                        <button class="mobile-status-bar__nav mobile-status-bar__nav--left">
                                            <i>
                                                <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 215 370.8" style="enable-background:new 0 0 215 370.8;" xml:space="preserve">
                                                <g>
                                                <g>
                                                <polygon points="215,24.8 190.9,0 0,185.4 190.9,370.8 215,346 49.7,185.4 "></polygon>
                                       </g>
                                    </g>
                                 </svg>
                                            </i>
                                        </button>
                                    </span>
                                    <span>
                                        <button class="mobile-status-bar__nav mobile-status-bar__nav--right">
                                            <i>
                                                <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 215 370.8" enable-background="new 0 0 215 370.8" xml:space="preserve">
                                                <g>
                                                <g>
                                                <polygon points="0,346 24.1,370.8 215,185.4 24.1,0 0,24.9 165.3,185.4 "></polygon>
                                       </g>
                                    </g>
                                 </svg>
                                            </i>
                                        </button>
                                    </span>
                                    <div class="progress-component mobile-status-bar__progress">
                                        <div class="progress-component__inner" style="transform: translateX(0px);"></div>
                                    </div>
                                    <span></span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





<script>
        var c = document.getElementById("myCanvas");
        var ctx = c.getContext("2d");
        var p = 10;
        var maxR = 250;
        var w = maxR;
        var h = maxR;
        var width = c.width - 2 * p;
        var height = c.height - 2 * p;
        var x = (width - w) / 2;
        var y = (height - h) / 2;
        ctx.rect(x, y, w, h);
        ctx.stroke();
        ctx.fillText("0 in", x - 40, y + (h / 2));
        ctx.fillText("0 in", x + (w / 2), y - 20);

        function redraw(new_w, new_h) {
            if (new_w > new_h) {
                w = maxR;
                h = maxR * (new_h / new_w);
            } else {
                h = maxR;
                w = maxR * (new_w / new_h);
            }

            var x = (width - w) / 2;
            var y = (height - h) / 2;
            ctx.clearRect(0, 0, c.width, c.height);
            ctx.strokeRect(x, y, w, h);
            ctx.fillText(new_h + " in", x - 40, y + (h / 2));
            ctx.fillText(new_w + " in", x + (w / 2), y - 20);
        }

        $(".h_num").change(function () {
            var neww = parseInt($(".w_num").val());
            var newh = parseInt( $(".h_num").val());
            redraw(neww, newh);
        });
        $(".w_num").change(function () {
            var neww = parseInt($(".w_num").val());
            var newh = parseInt($(".h_num").val());
            redraw(neww, newh);
        });
</script>



<script>
    function callbackpage() {
        $.ajax({
            type: 'get',
            url: '/upload/Setep5',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                $('#updatediv').html(data);
            },
            error: function (data) {

            }
        });
    }
</script>